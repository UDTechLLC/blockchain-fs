// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wizefs_service.proto

/*
Package wizefsservice is a generated protocol buffer package.

It is generated from these files:
	wizefs_service.proto

It has these top-level messages:
	FilesystemRequest
	FilesystemResponse
	PutRequest
	PutResponse
	GetRequest
	GetResponse
	RemoveRequest
	RemoveResponse
*/
package wizefsservice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FilesystemRequest struct {
	Origin string `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
}

func (m *FilesystemRequest) Reset()                    { *m = FilesystemRequest{} }
func (m *FilesystemRequest) String() string            { return proto.CompactTextString(m) }
func (*FilesystemRequest) ProtoMessage()               {}
func (*FilesystemRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *FilesystemRequest) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

type FilesystemResponse struct {
	Executed bool   `protobuf:"varint,1,opt,name=executed" json:"executed,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *FilesystemResponse) Reset()                    { *m = FilesystemResponse{} }
func (m *FilesystemResponse) String() string            { return proto.CompactTextString(m) }
func (*FilesystemResponse) ProtoMessage()               {}
func (*FilesystemResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FilesystemResponse) GetExecuted() bool {
	if m != nil {
		return m.Executed
	}
	return false
}

func (m *FilesystemResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type PutRequest struct {
	Filename string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Origin   string `protobuf:"bytes,3,opt,name=origin" json:"origin,omitempty"`
}

func (m *PutRequest) Reset()                    { *m = PutRequest{} }
func (m *PutRequest) String() string            { return proto.CompactTextString(m) }
func (*PutRequest) ProtoMessage()               {}
func (*PutRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *PutRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *PutRequest) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *PutRequest) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

type PutResponse struct {
	Executed bool   `protobuf:"varint,1,opt,name=executed" json:"executed,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *PutResponse) Reset()                    { *m = PutResponse{} }
func (m *PutResponse) String() string            { return proto.CompactTextString(m) }
func (*PutResponse) ProtoMessage()               {}
func (*PutResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *PutResponse) GetExecuted() bool {
	if m != nil {
		return m.Executed
	}
	return false
}

func (m *PutResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetRequest struct {
	Filename string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Origin   string `protobuf:"bytes,2,opt,name=origin" json:"origin,omitempty"`
}

func (m *GetRequest) Reset()                    { *m = GetRequest{} }
func (m *GetRequest) String() string            { return proto.CompactTextString(m) }
func (*GetRequest) ProtoMessage()               {}
func (*GetRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *GetRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *GetRequest) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

type GetResponse struct {
	Executed bool   `protobuf:"varint,1,opt,name=executed" json:"executed,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
	Content  []byte `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
}

func (m *GetResponse) Reset()                    { *m = GetResponse{} }
func (m *GetResponse) String() string            { return proto.CompactTextString(m) }
func (*GetResponse) ProtoMessage()               {}
func (*GetResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *GetResponse) GetExecuted() bool {
	if m != nil {
		return m.Executed
	}
	return false
}

func (m *GetResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetResponse) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

type RemoveRequest struct {
	Filename string `protobuf:"bytes,1,opt,name=filename" json:"filename,omitempty"`
	Origin   string `protobuf:"bytes,2,opt,name=origin" json:"origin,omitempty"`
}

func (m *RemoveRequest) Reset()                    { *m = RemoveRequest{} }
func (m *RemoveRequest) String() string            { return proto.CompactTextString(m) }
func (*RemoveRequest) ProtoMessage()               {}
func (*RemoveRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *RemoveRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *RemoveRequest) GetOrigin() string {
	if m != nil {
		return m.Origin
	}
	return ""
}

type RemoveResponse struct {
	Executed bool   `protobuf:"varint,1,opt,name=executed" json:"executed,omitempty"`
	Message  string `protobuf:"bytes,2,opt,name=message" json:"message,omitempty"`
}

func (m *RemoveResponse) Reset()                    { *m = RemoveResponse{} }
func (m *RemoveResponse) String() string            { return proto.CompactTextString(m) }
func (*RemoveResponse) ProtoMessage()               {}
func (*RemoveResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *RemoveResponse) GetExecuted() bool {
	if m != nil {
		return m.Executed
	}
	return false
}

func (m *RemoveResponse) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*FilesystemRequest)(nil), "wizefsservice.FilesystemRequest")
	proto.RegisterType((*FilesystemResponse)(nil), "wizefsservice.FilesystemResponse")
	proto.RegisterType((*PutRequest)(nil), "wizefsservice.PutRequest")
	proto.RegisterType((*PutResponse)(nil), "wizefsservice.PutResponse")
	proto.RegisterType((*GetRequest)(nil), "wizefsservice.GetRequest")
	proto.RegisterType((*GetResponse)(nil), "wizefsservice.GetResponse")
	proto.RegisterType((*RemoveRequest)(nil), "wizefsservice.RemoveRequest")
	proto.RegisterType((*RemoveResponse)(nil), "wizefsservice.RemoveResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for WizeFsService service

type WizeFsServiceClient interface {
	Create(ctx context.Context, in *FilesystemRequest, opts ...grpc.CallOption) (*FilesystemResponse, error)
	Delete(ctx context.Context, in *FilesystemRequest, opts ...grpc.CallOption) (*FilesystemResponse, error)
	Mount(ctx context.Context, in *FilesystemRequest, opts ...grpc.CallOption) (*FilesystemResponse, error)
	Unmount(ctx context.Context, in *FilesystemRequest, opts ...grpc.CallOption) (*FilesystemResponse, error)
	// potential client-side streaming RPC:
	// client sends a sequence of messages using a provided stream
	// server read them and return its response
	Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error)
	// potential server-side streaming RPC:
	// client sends a request and gets a stream to read a sequence of messages
	// server sends a sequence of messages
	Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error)
	Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error)
}

type wizeFsServiceClient struct {
	cc *grpc.ClientConn
}

func NewWizeFsServiceClient(cc *grpc.ClientConn) WizeFsServiceClient {
	return &wizeFsServiceClient{cc}
}

func (c *wizeFsServiceClient) Create(ctx context.Context, in *FilesystemRequest, opts ...grpc.CallOption) (*FilesystemResponse, error) {
	out := new(FilesystemResponse)
	err := grpc.Invoke(ctx, "/wizefsservice.WizeFsService/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wizeFsServiceClient) Delete(ctx context.Context, in *FilesystemRequest, opts ...grpc.CallOption) (*FilesystemResponse, error) {
	out := new(FilesystemResponse)
	err := grpc.Invoke(ctx, "/wizefsservice.WizeFsService/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wizeFsServiceClient) Mount(ctx context.Context, in *FilesystemRequest, opts ...grpc.CallOption) (*FilesystemResponse, error) {
	out := new(FilesystemResponse)
	err := grpc.Invoke(ctx, "/wizefsservice.WizeFsService/Mount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wizeFsServiceClient) Unmount(ctx context.Context, in *FilesystemRequest, opts ...grpc.CallOption) (*FilesystemResponse, error) {
	out := new(FilesystemResponse)
	err := grpc.Invoke(ctx, "/wizefsservice.WizeFsService/Unmount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wizeFsServiceClient) Put(ctx context.Context, in *PutRequest, opts ...grpc.CallOption) (*PutResponse, error) {
	out := new(PutResponse)
	err := grpc.Invoke(ctx, "/wizefsservice.WizeFsService/Put", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wizeFsServiceClient) Get(ctx context.Context, in *GetRequest, opts ...grpc.CallOption) (*GetResponse, error) {
	out := new(GetResponse)
	err := grpc.Invoke(ctx, "/wizefsservice.WizeFsService/Get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wizeFsServiceClient) Remove(ctx context.Context, in *RemoveRequest, opts ...grpc.CallOption) (*RemoveResponse, error) {
	out := new(RemoveResponse)
	err := grpc.Invoke(ctx, "/wizefsservice.WizeFsService/Remove", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for WizeFsService service

type WizeFsServiceServer interface {
	Create(context.Context, *FilesystemRequest) (*FilesystemResponse, error)
	Delete(context.Context, *FilesystemRequest) (*FilesystemResponse, error)
	Mount(context.Context, *FilesystemRequest) (*FilesystemResponse, error)
	Unmount(context.Context, *FilesystemRequest) (*FilesystemResponse, error)
	// potential client-side streaming RPC:
	// client sends a sequence of messages using a provided stream
	// server read them and return its response
	Put(context.Context, *PutRequest) (*PutResponse, error)
	// potential server-side streaming RPC:
	// client sends a request and gets a stream to read a sequence of messages
	// server sends a sequence of messages
	Get(context.Context, *GetRequest) (*GetResponse, error)
	Remove(context.Context, *RemoveRequest) (*RemoveResponse, error)
}

func RegisterWizeFsServiceServer(s *grpc.Server, srv WizeFsServiceServer) {
	s.RegisterService(&_WizeFsService_serviceDesc, srv)
}

func _WizeFsService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WizeFsServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wizefsservice.WizeFsService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WizeFsServiceServer).Create(ctx, req.(*FilesystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WizeFsService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WizeFsServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wizefsservice.WizeFsService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WizeFsServiceServer).Delete(ctx, req.(*FilesystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WizeFsService_Mount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WizeFsServiceServer).Mount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wizefsservice.WizeFsService/Mount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WizeFsServiceServer).Mount(ctx, req.(*FilesystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WizeFsService_Unmount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FilesystemRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WizeFsServiceServer).Unmount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wizefsservice.WizeFsService/Unmount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WizeFsServiceServer).Unmount(ctx, req.(*FilesystemRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WizeFsService_Put_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PutRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WizeFsServiceServer).Put(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wizefsservice.WizeFsService/Put",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WizeFsServiceServer).Put(ctx, req.(*PutRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WizeFsService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WizeFsServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wizefsservice.WizeFsService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WizeFsServiceServer).Get(ctx, req.(*GetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WizeFsService_Remove_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WizeFsServiceServer).Remove(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/wizefsservice.WizeFsService/Remove",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WizeFsServiceServer).Remove(ctx, req.(*RemoveRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WizeFsService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "wizefsservice.WizeFsService",
	HandlerType: (*WizeFsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _WizeFsService_Create_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _WizeFsService_Delete_Handler,
		},
		{
			MethodName: "Mount",
			Handler:    _WizeFsService_Mount_Handler,
		},
		{
			MethodName: "Unmount",
			Handler:    _WizeFsService_Unmount_Handler,
		},
		{
			MethodName: "Put",
			Handler:    _WizeFsService_Put_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _WizeFsService_Get_Handler,
		},
		{
			MethodName: "Remove",
			Handler:    _WizeFsService_Remove_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wizefs_service.proto",
}

func init() { proto.RegisterFile("wizefs_service.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 351 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x94, 0x5f, 0x4b, 0x32, 0x41,
	0x18, 0xc5, 0xfd, 0xf3, 0xbe, 0xab, 0x3d, 0x66, 0xd0, 0x10, 0x61, 0x4b, 0x81, 0xcd, 0x55, 0x10,
	0x78, 0x51, 0xf7, 0x11, 0x18, 0x0a, 0x41, 0x25, 0x1b, 0x11, 0x04, 0x11, 0x66, 0x47, 0x19, 0x70,
	0x67, 0x6c, 0x67, 0xd6, 0xca, 0xcf, 0xd2, 0x87, 0x0d, 0x67, 0x5d, 0xdd, 0xd5, 0x8a, 0x60, 0xbd,
	0x7c, 0x66, 0xce, 0xfc, 0xe6, 0x37, 0x70, 0x76, 0x69, 0xe7, 0x4d, 0x4c, 0xd0, 0xd7, 0x4f, 0x1a,
	0xc1, 0x58, 0xf4, 0xd0, 0x18, 0x05, 0xca, 0x28, 0x56, 0x8d, 0x56, 0x67, 0x8b, 0xfc, 0x98, 0xb6,
	0x5b, 0x62, 0x08, 0xfd, 0xa1, 0x0d, 0x7c, 0x0f, 0xaf, 0x21, 0xb4, 0x61, 0xbb, 0xe4, 0xa8, 0x40,
	0x0c, 0x84, 0xac, 0xe5, 0xeb, 0xf9, 0xa3, 0x0d, 0x6f, 0x36, 0xf1, 0x4b, 0x62, 0xc9, 0xb0, 0x1e,
	0x29, 0xa9, 0xc1, 0x5c, 0x2a, 0xe3, 0x1d, 0xbd, 0xd0, 0xe0, 0xc5, 0xe6, 0xcb, 0xde, 0x7c, 0x66,
	0x35, 0x2a, 0xf9, 0xd0, 0xba, 0x3b, 0x40, 0xad, 0x60, 0x51, 0xf1, 0xc8, 0x1f, 0x88, 0x3a, 0xa1,
	0x89, 0x6f, 0x74, 0xa9, 0xdc, 0x17, 0x43, 0xc8, 0xae, 0x8f, 0xd9, 0x9d, 0xf3, 0x79, 0xca, 0xe8,
	0x29, 0x69, 0x20, 0x8d, 0x65, 0x6c, 0x7a, 0xf1, 0x98, 0xf0, 0x2c, 0xa6, 0x3c, 0x9b, 0x54, 0xb1,
	0xec, 0x4c, 0x82, 0xe7, 0x44, 0x6d, 0xfc, 0x49, 0x70, 0xa1, 0x51, 0x48, 0x69, 0x3c, 0x52, 0xc5,
	0x12, 0xb2, 0x68, 0x24, 0x5f, 0x5f, 0x4c, 0xbd, 0x9e, 0x37, 0xa9, 0xea, 0xc1, 0x57, 0x63, 0x64,
	0x71, 0x6c, 0xd1, 0x56, 0x0c, 0xc9, 0xa2, 0x79, 0xf2, 0xf9, 0x8f, 0xaa, 0xf7, 0x62, 0x82, 0x96,
	0xbe, 0x8d, 0x9a, 0xc5, 0x6e, 0xc8, 0x69, 0x06, 0xe8, 0x1a, 0xb0, 0x7a, 0x23, 0xd5, 0xb9, 0xc6,
	0x4a, 0xe1, 0xdc, 0xc3, 0x5f, 0x12, 0x91, 0x16, 0xcf, 0x4d, 0x81, 0x17, 0x18, 0x62, 0x7d, 0xc0,
	0x6b, 0xfa, 0x7f, 0xa5, 0x42, 0x69, 0xd6, 0xc5, 0xeb, 0x50, 0xe9, 0x4e, 0xfa, 0xeb, 0x24, 0x9e,
	0x51, 0xb1, 0x13, 0x1a, 0xb6, 0xb7, 0x94, 0x5d, 0x7c, 0x38, 0xae, 0xfb, 0xdd, 0x56, 0xf2, 0x7c,
	0x1b, 0xab, 0xe7, 0x17, 0xbd, 0x5e, 0x39, 0x9f, 0x28, 0x2c, 0xcf, 0xb1, 0x36, 0x39, 0x51, 0x3b,
	0xd8, 0xfe, 0x52, 0x2e, 0xd5, 0x3c, 0xf7, 0xe0, 0x87, 0xdd, 0x18, 0xf4, 0xec, 0xd8, 0x9f, 0xcf,
	0xe9, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa7, 0x9c, 0x24, 0xf1, 0x94, 0x04, 0x00, 0x00,
}
